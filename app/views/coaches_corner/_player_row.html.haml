- player = get_player(lineup.player_teams.first.player_id) unless lineup.player_teams.empty?
%tr.slot.lineup{ :data => { :id => lineup.id }, :class => [player.nil? ? 'empty' : '', lineup.flex ? 'flex' : ''] }
  %td.position= lineup.flex ? lineup.flex_positions.collect{ |p| p.abbreviation.upcase }.join('/') : lineup.position.abbreviation.upcase
  %td.player
    %span.name
      - if player.nil?
        Empty
      - else
        %a{ :href => player_path(player.id),
          :rel => 'tooltip',
          :title => player.name.full_name,
          :data => { :delay => ({ 'show' => 500, 'hide' => 100 }).to_json } }
          = player.name.last_with_first_initial
    %span.position{ :data => { :id => player.nil? ? '' : player.position.id } }
      = player.position.abbreviation.upcase unless player.nil?
    %span.team
      = player.real_team.name.abbreviation.upcase unless player.nil?
  %td.player.points= player.points_this_season unless player.nil?
  %td.player.points.projected N/A
  %td.player.bye= player.contract.bye_week unless player.nil?
  %td.opponent
    - opponent_player = @opponent_lineup.find{ |pt| pt.lineup_id === lineup.id }.try( :player )
    %span.name
      - if opponent_player.nil?
        Empty
      - else
        %a{ :href => player_path(opponent_player.id),
          :rel => 'tooltip',
          :title => opponent_player.name.full_name,
          :data => { :delay => ({ 'show' => 500, 'hide' => 100 }).to_json } }
          = opponent_player.name.last_with_first_initial
    %span.position
      = opponent_player.position.abbreviation.upcase unless opponent_player.nil?
    %span.team
      = opponent_player.real_team.name.abbreviation.upcase unless opponent_player.nil?
  %td
    %button.btn.btn-mini{ :href => '#swap_player',
      :data => { :toggle => 'modal',
      :compatible => Lineup.by_position(player.nil? ? lineup.position_id : player.position.id).collect{ |l| l.id unless (l.string === lineup.string ? l.position_id === lineup.position_id : l.string === lineup.string) }.compact } }
      = t ".labels.#{lineup.string.ordinalize}_string"
      %i{ :class => "#{lineup.string === 1 ? 'icon-chevron-down' : 'icon-chevron-up'} #{player.nil? ? '' : 'hide'}" }
