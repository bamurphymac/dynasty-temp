Ext.data.JsonP.Ext_util_Point({"allMixins":[],"tagname":"class","deprecated":null,"singleton":false,"author":null,"alias":null,"superclasses":["Ext.Base","Ext.util.Region","Ext.util.Point"],"mixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.Base' rel='Ext.Base' class='docClass'>Ext.Base</a><div class='subclass '><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='docClass'>Ext.util.Region</a><div class='subclass '><strong>Ext.util.Point</strong></div></div></div></pre><div class='doc-contents'><p>Represents a 2D point with x and y properties, useful for comparison and instantiation\nfrom an event:</p>\n\n<pre><code>var point = Ext.util.Point.fromEvent(e);\n</code></pre>\n</div><div class='members'><div id='m-property'><div class='definedBy'>Defined By</div><h3 class='members-title'>Properties</h3><div class='subsection'><div id='property-self' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-self' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-property-self' class='name expandable'>self</a><span> : Ext.Class</span><strong class='protected-signature'>protected</strong></div><div class='description'><div class='short'>Get the reference to the current class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code>Ext.define('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); / dependent on 'this'\n\n        return this;\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\nExt.define('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(Ext.getClassName(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n</div></div></div></div></div><div id='m-method'><h3 class='members-title'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Point' rel='Ext.util.Point' class='definedIn docClass'>Ext.util.Point</a><br/><a href='source/Point.html#Ext-util-Point-method-constructor' target='_blank' class='viewSource'>view source</a></div><strong class='constructor-signature'>new</strong><a href='#!/api/Ext.util.Point-method-constructor' class='name expandable'>Ext.util.Point</a>( <span class='pre'>Number x, Number y</span> ) : Object</div><div class='description'><div class='short'>Creates a point from two coordinates. ...</div><div class='long'><p>Creates a point from two coordinates.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>X coordinate.</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>Y coordinate.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-adjust' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-adjust' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-adjust' class='name expandable'>adjust</a>( <span class='pre'>Number top, Number right, Number bottom, Number left</span> ) : Ext.util.Region</div><div class='description'><div class='short'>Modifies the current region to be adjusted by offsets. ...</div><div class='long'><p>Modifies the current region to be adjusted by offsets.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>top</span> : Number<div class='sub-desc'><p>top offset</p>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'><p>right offset</p>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'><p>bottom offset</p>\n</div></li><li><span class='pre'>left</span> : Number<div class='sub-desc'><p>left offset</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.util.Region</span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-callOverridden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-callOverridden' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-method-callOverridden' class='name expandable'>callOverridden</a>( <span class='pre'>Array/Arguments args</span> ) : Object<strong class='protected-signature'>protected</strong></div><div class='description'><div class='short'>Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...</div><div class='long'><p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-method-override\" rel=\"Ext.Base-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code>Ext.define('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n\n        return this;\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Array/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Returns the result after calling the overridden method</p>\n</div></li></ul></div></div></div><div id='method-callParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-callParent' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-method-callParent' class='name expandable'>callParent</a>( <span class='pre'>Array/Arguments args</span> ) : Object<strong class='protected-signature'>protected</strong></div><div class='description'><div class='short'>Call the parent's overridden method. ...</div><div class='long'><p>Call the parent's overridden method. For example:</p>\n\n<pre><code>Ext.define('My.own.A', {\n    constructor: function(test) {\n        alert(test);\n    }\n});\n\nExt.define('My.own.B', {\n    extend: 'My.own.A',\n\n    constructor: function(test) {\n        alert(test);\n\n        this.callParent([test + 1]);\n    }\n});\n\nExt.define('My.own.C', {\n    extend: 'My.own.B',\n\n    constructor: function() {\n        alert(\"Going to call parent's overriden constructor...\");\n\n        this.callParent(arguments);\n    }\n});\n\nvar a = new My.own.A(1); // alerts '1'\nvar b = new My.own.B(1); // alerts '1', then alerts '2'\nvar c = new My.own.C(2); // alerts \"Going to call parent's overriden constructor...\"\n                         // alerts '2', then alerts '3'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Array/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Returns the result from the superclass' method</p>\n</div></li></ul></div></div></div><div id='method-constrainTo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-constrainTo' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-constrainTo' class='name expandable'>constrainTo</a>( <span class='pre'>Ext.util.Region targetRegion</span> ) : Ext.util.Region</div><div class='description'><div class='short'>Modifies the current region to be constrained to the targetRegion. ...</div><div class='long'><p>Modifies the current region to be constrained to the targetRegion.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>targetRegion</span> : Ext.util.Region<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.util.Region</span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-contains' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-contains' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-contains' class='name expandable'>contains</a>( <span class='pre'>Ext.util.Region region</span> ) : Boolean</div><div class='description'><div class='short'>Checks if this region completely contains the region that is passed in. ...</div><div class='long'><p>Checks if this region completely contains the region that is passed in.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>region</span> : Ext.util.Region<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-copy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-copy' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-copy' class='name expandable'>copy</a>( <span class='pre'></span> ) : Ext.util.Region</div><div class='description'><div class='short'>Create a copy of this Region. ...</div><div class='long'><p>Create a copy of this Region.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.util.Region</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-copyFrom' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-copyFrom' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-copyFrom' class='name expandable'>copyFrom</a>( <span class='pre'>Ext.util.Region p</span> ) : Ext.util.Region</div><div class='description'><div class='short'>Copy the values of another Region to this Region ...</div><div class='long'><p>Copy the values of another Region to this Region</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>p</span> : Ext.util.Region<div class='sub-desc'><p>The region to copy from.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.util.Region</span><div class='sub-desc'><p>This Region</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Point' rel='Ext.util.Point' class='definedIn docClass'>Ext.util.Point</a><br/><a href='source/Point.html#Ext-util-Point-method-equals' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Point-method-equals' class='name expandable'>equals</a>( <span class='pre'>Ext.util.Point/Object The</span> ) : Boolean</div><div class='description'><div class='short'>Compare this point and another point ...</div><div class='long'><p>Compare this point and another point</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>The</span> : Ext.util.Point/Object<div class='sub-desc'><p>point to compare with, either an instance\nof <a href=\"#!/api/Ext.util.Point\" rel=\"Ext.util.Point\" class=\"docClass\">Ext.util.Point</a> or an object with left and top properties</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns whether they are equivalent</p>\n</div></li></ul></div></div></div><div id='method-getOutOfBoundOffset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-getOutOfBoundOffset' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-getOutOfBoundOffset' class='name expandable'>getOutOfBoundOffset</a>( <span class='pre'>[String axis], [Ext.util.Point p]</span> ) : Ext.util.Offset</div><div class='description'><div class='short'>Get the offset amount of a point outside the region ...</div><div class='long'><p>Get the offset amount of a point outside the region</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>axis</span> : String (optional)<div class='sub-desc'>\n</div></li><li><span class='pre'>p</span> : Ext.util.Point (optional)<div class='sub-desc'><p>the point</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.util.Offset</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getOutOfBoundOffsetX' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-getOutOfBoundOffsetX' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-getOutOfBoundOffsetX' class='name expandable'>getOutOfBoundOffsetX</a>( <span class='pre'>Number p</span> ) : Number</div><div class='description'><div class='short'>Get the offset amount on the x-axis ...</div><div class='long'><p>Get the offset amount on the x-axis</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>p</span> : Number<div class='sub-desc'><p>the offset</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getOutOfBoundOffsetY' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-getOutOfBoundOffsetY' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-getOutOfBoundOffsetY' class='name expandable'>getOutOfBoundOffsetY</a>( <span class='pre'>Number p</span> ) : Number</div><div class='description'><div class='short'>Get the offset amount on the y-axis ...</div><div class='long'><p>Get the offset amount on the y-axis</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>p</span> : Number<div class='sub-desc'><p>the offset</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-initConfig' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-method-initConfig' class='name expandable'>initConfig</a>( <span class='pre'>Object config</span> ) : Object<strong class='protected-signature'>protected</strong></div><div class='description'><div class='short'>Initialize configuration for this class. ...</div><div class='long'><p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code>Ext.define('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n\n        return this;\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>mixins The mixin prototypes as key - value pairs</p>\n</div></li></ul></div></div></div><div id='method-intersect' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-intersect' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-intersect' class='name expandable'>intersect</a>( <span class='pre'>Ext.util.Region region</span> ) : Ext.util.Region/Boolean</div><div class='description'><div class='short'>Checks if this region intersects the region passed in. ...</div><div class='long'><p>Checks if this region intersects the region passed in.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>region</span> : Ext.util.Region<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.util.Region/Boolean</span><div class='sub-desc'><p>Returns the intersected region or false if there is no intersection.</p>\n</div></li></ul></div></div></div><div id='method-isOutOfBound' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-isOutOfBound' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-isOutOfBound' class='name expandable'>isOutOfBound</a>( <span class='pre'>[String axis], [Ext.util.Point/Number p]</span> ) : Boolean</div><div class='description'><div class='short'>Check whether the point / offset is out of bound ...</div><div class='long'><p>Check whether the point / offset is out of bound</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>axis</span> : String (optional)<div class='sub-desc'>\n</div></li><li><span class='pre'>p</span> : Ext.util.Point/Number (optional)<div class='sub-desc'><p>the point / offset</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isOutOfBoundX' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-isOutOfBoundX' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-isOutOfBoundX' class='name expandable'>isOutOfBoundX</a>( <span class='pre'>Number p</span> ) : Boolean</div><div class='description'><div class='short'>Check whether the offset is out of bound in the x-axis ...</div><div class='long'><p>Check whether the offset is out of bound in the x-axis</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>p</span> : Number<div class='sub-desc'><p>the offset</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isOutOfBoundY' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-isOutOfBoundY' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-isOutOfBoundY' class='name expandable'>isOutOfBoundY</a>( <span class='pre'>Number p</span> ) : Boolean</div><div class='description'><div class='short'>Check whether the offset is out of bound in the y-axis ...</div><div class='long'><p>Check whether the offset is out of bound in the y-axis</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>p</span> : Number<div class='sub-desc'><p>the offset</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isWithin' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Point' rel='Ext.util.Point' class='definedIn docClass'>Ext.util.Point</a><br/><a href='source/Point.html#Ext-util-Point-method-isWithin' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Point-method-isWithin' class='name expandable'>isWithin</a>( <span class='pre'>Ext.util.Point/Object p, Object/Number threshold</span> ) : Boolean</div><div class='description'><div class='short'>Whether the given point is not away from this point within the given threshold amount. ...</div><div class='long'><p>Whether the given point is not away from this point within the given threshold amount.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>p</span> : Ext.util.Point/Object<div class='sub-desc'><p>The point to check with, either an instance\nof <a href=\"#!/api/Ext.util.Point\" rel=\"Ext.util.Point\" class=\"docClass\">Ext.util.Point</a> or an object with left and top properties</p>\n</div></li><li><span class='pre'>threshold</span> : Object/Number<div class='sub-desc'><p>Can be either an object with x and y properties or a number</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-round' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-round' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-round' class='name expandable'>round</a>( <span class='pre'></span> ) : Ext.util.Region</div><div class='description'><div class='short'>Round all the properties of this region ...</div><div class='long'><p>Round all the properties of this region</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.util.Region</span><div class='sub-desc'><p>this This Region</p>\n</div></li></ul></div></div></div><div id='method-roundedEquals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Point' rel='Ext.util.Point' class='definedIn docClass'>Ext.util.Point</a><br/><a href='source/Point.html#Ext-util-Point-method-roundedEquals' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Point-method-roundedEquals' class='name expandable'>roundedEquals</a>( <span class='pre'>Ext.util.Point/Object p</span> ) : Boolean</div><div class='description'><div class='short'>Compare this point with another point when the x and y values of both points are rounded. ...</div><div class='long'><p>Compare this point with another point when the x and y values of both points are rounded. E.g:\n[100.3,199.8] will equals to [100, 200]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>p</span> : Ext.util.Point/Object<div class='sub-desc'><p>The point to compare with, either an instance\nof <a href=\"#!/api/Ext.util.Point\" rel=\"Ext.util.Point\" class=\"docClass\">Ext.util.Point</a> or an object with x and y properties</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-statics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-statics' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-method-statics' class='name expandable'>statics</a>( <span class='pre'></span> ) : Ext.Class<strong class='protected-signature'>protected</strong></div><div class='description'><div class='short'>Get the reference to the class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code>Ext.define('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n\n        return this;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\nExt.define('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(Ext.getClassName(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.Class</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Point' rel='Ext.util.Point' class='definedIn docClass'>Ext.util.Point</a><br/><a href='source/Point.html#Ext-util-Point-method-toString' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Point-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Returns a human-eye-friendly string that represents this point,\nuseful for debugging ...</div><div class='long'><p>Returns a human-eye-friendly string that represents this point,\nuseful for debugging</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-translate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Point' rel='Ext.util.Point' class='definedIn docClass'>Ext.util.Point</a><br/><a href='source/Point.html#Ext-util-Point-method-translate' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Point-method-translate' class='name expandable'>translate</a>( <span class='pre'>Ext.util.Offset/Object x, Number y</span> ) : Ext.util.Region</div><div class='description'><div class='short'>Alias for translateBy\n\nTranslate this region by the given offset amount ...</div><div class='long'><p>Alias for <a href=\"#!/api/Ext.util.Point-method-translateBy\" rel=\"Ext.util.Point-method-translateBy\" class=\"docClass\">translateBy</a></p>\n\n<p>Translate this region by the given offset amount</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Ext.util.Offset/Object<div class='sub-desc'><p>Object containing the <code>x</code> and <code>y</code> properties.\nOr the x value is using the two argument form.</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>The y value unless using an Offset object.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.util.Region</span><div class='sub-desc'><p>this This Region</p>\n</div></li></ul></div></div></div><div id='method-translateBy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-translateBy' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-translateBy' class='name expandable'>translateBy</a>( <span class='pre'>Ext.util.Offset/Object x, Number y</span> ) : Ext.util.Region</div><div class='description'><div class='short'>Translate this region by the given offset amount ...</div><div class='long'><p>Translate this region by the given offset amount</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Ext.util.Offset/Object<div class='sub-desc'><p>Object containing the <code>x</code> and <code>y</code> properties.\nOr the x value is using the two argument form.</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>The y value unless using an Offset object.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.util.Region</span><div class='sub-desc'><p>this This Region</p>\n</div></li></ul></div></div></div><div id='method-union' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='definedIn docClass'>Ext.util.Region</a><br/><a href='source/Region.html#Ext-util-Region-method-union' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Region-method-union' class='name expandable'>union</a>( <span class='pre'>Ext.util.Region region</span> ) : Ext.util.Region</div><div class='description'><div class='short'>Returns the smallest region that contains the current AND targetRegion. ...</div><div class='long'><p>Returns the smallest region that contains the current AND targetRegion.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>region</span> : Ext.util.Region<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.util.Region</span><div class='sub-desc'><p>a new region</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='method-addStatics' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-addStatics' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-method-addStatics' class='name expandable'>addStatics</a>( <span class='pre'>Object members</span> ) : Ext.Base<strong class='static-signature'>static</strong></div><div class='description'><div class='short'>Add / override static properties of this class. ...</div><div class='long'><p>Add / override static properties of this class.</p>\n\n<pre><code>Ext.define('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.Base</span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-borrow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-borrow' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-method-borrow' class='name expandable'>borrow</a>( <span class='pre'>Ext.Base fromClass, String/String[] members</span> ) : Ext.Base<strong class='static-signature'>static</strong></div><div class='description'><div class='short'>Borrow another class' members to the prototype of this class. ...</div><div class='long'><p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code>Ext.define('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\nExt.define('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fromClass</span> : Ext.Base<div class='sub-desc'><p>The class to borrow members from</p>\n</div></li><li><span class='pre'>members</span> : String/String[]<div class='sub-desc'><p>The names of the members to borrow</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.Base</span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-create' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-create' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-method-create' class='name expandable'>create</a>( <span class='pre'></span> ) : Object<strong class='static-signature'>static</strong></div><div class='description'><div class='short'>Create a new instance of this Class. ...</div><div class='long'><p>Create a new instance of this Class.</p>\n\n<pre><code>Ext.define('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>the created instance.</p>\n</div></li></ul></div></div></div><div id='method-createAlias' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-createAlias' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-method-createAlias' class='name expandable'>createAlias</a>( <span class='pre'>String/Object alias, String/Object origin</span> )<strong class='static-signature'>static</strong></div><div class='description'><div class='short'>Create aliases for existing prototype methods. ...</div><div class='long'><p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code>Ext.define('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : String/Object<div class='sub-desc'><p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n</div></li><li><span class='pre'>origin</span> : String/Object<div class='sub-desc'><p>The original method name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>undefined</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-fromEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Point' rel='Ext.util.Point' class='definedIn docClass'>Ext.util.Point</a><br/><a href='source/Point.html#Ext-util-Point-method-fromEvent' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Point-method-fromEvent' class='name expandable'>fromEvent</a>( <span class='pre'>Event e</span> ) : Ext.util.Point<strong class='static-signature'>static</strong></div><div class='description'><div class='short'>Returns a new instance of Ext.util.Point base on the pageX / pageY values of the given event ...</div><div class='long'><p>Returns a new instance of <a href=\"#!/api/Ext.util.Point\" rel=\"Ext.util.Point\" class=\"docClass\">Ext.util.Point</a> base on the pageX / pageY values of the given event</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>e</span> : Event<div class='sub-desc'><p>The event</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.util.Point</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-getName' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String<strong class='static-signature'>static</strong></div><div class='description'><div class='short'>Get the current class' name in string format. ...</div><div class='long'><p>Get the current class' name in string format.</p>\n\n<pre><code>Ext.define('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>className</p>\n</div></li></ul></div></div></div><div id='method-implement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-implement' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-method-implement' class='name expandable'>implement</a>( <span class='pre'>Object members</span> )<strong class='static-signature'>static</strong></div><div class='description'><div class='short'>Add methods / properties to the prototype of this class. ...</div><div class='long'><p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code>Ext.define('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.implement({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>undefined</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-override' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-override' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-method-override' class='name expandable'>override</a>( <span class='pre'>Object members</span> ) : Ext.Base<strong class='static-signature'>static</strong></div><div class='description'><div class='short'>Override prototype members of this class. ...</div><div class='long'><p>Override prototype members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callOverridden\" rel=\"Ext.Base-method-callOverridden\" class=\"docClass\">callOverridden</a></p>\n\n<pre><code>Ext.define('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n\n        return this;\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.Base</span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div></div></div></div></div>","subclasses":[],"code_type":"ext_define","linenr":1,"html_filename":"Point.html","alternateClassNames":[],"protected":false,"requires":[],"docauthor":null,"static":false,"members":{"event":[],"property":[{"deprecated":null,"tagname":"property","owner":"Ext.Base","protected":true,"static":false,"name":"self","required":null}],"method":[{"deprecated":null,"tagname":"method","owner":"Ext.util.Point","protected":false,"static":false,"name":"constructor","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"adjust","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.Base","protected":true,"static":false,"name":"callOverridden","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.Base","protected":true,"static":false,"name":"callParent","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"constrainTo","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"contains","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"copy","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"copyFrom","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Point","protected":false,"static":false,"name":"equals","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"getOutOfBoundOffset","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"getOutOfBoundOffsetX","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"getOutOfBoundOffsetY","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.Base","protected":true,"static":false,"name":"initConfig","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"intersect","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"isOutOfBound","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"isOutOfBoundX","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"isOutOfBoundY","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Point","protected":false,"static":false,"name":"isWithin","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"round","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Point","protected":false,"static":false,"name":"roundedEquals","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.Base","protected":true,"static":false,"name":"statics","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Point","protected":false,"static":false,"name":"toString","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Point","protected":false,"static":false,"name":"translate","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"translateBy","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Region","protected":false,"static":false,"name":"union","required":null}],"css_var":[],"css_mixin":[],"cfg":[]},"component":false,"xtypes":[],"inheritable":false,"private":false,"extends":"Ext.util.Region","name":"Ext.util.Point","statics":{"event":[],"property":[],"method":[{"deprecated":null,"tagname":"method","owner":"Ext.Base","protected":false,"static":true,"name":"addStatics","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.Base","protected":false,"static":true,"name":"borrow","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.Base","protected":false,"static":true,"name":"create","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.Base","protected":false,"static":true,"name":"createAlias","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.util.Point","protected":false,"static":true,"name":"fromEvent","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.Base","protected":false,"static":true,"name":"getName","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.Base","protected":false,"static":true,"name":"implement","required":null},{"deprecated":null,"tagname":"method","owner":"Ext.Base","protected":false,"static":true,"name":"override","required":null}],"css_var":[],"cfg":[],"css_mixin":[]},"mixedInto":[],"href":"Point.html#Ext-util-Point","uses":[],"filename":"/Users/nickpoulden/Projects/sencha/SDK/platform/src/util/Point.js"});